services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - '8000:8000'
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_database &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - POSTGRES_NAME=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    volumes:
      - dev-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-U', 'devuser', '-d', 'devdb']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  dev-postgres-data:
  dev-static-data:
